{
    "$schema": "https://aka.ms/codetour-schema",
    "title": "Understanding the Dialog Manager",
    "steps": [
      {
        "file": "dialog_manager.py",
        "description": "The `DialogManager` is an abstract base class that provides the foundation for managing conversations.",
        "line": 9
      },
      {
        "file": "dialog_manager.py",
        "description": "The `__new__` method determines which concrete DialogManager class to instantiate: `BasicDialogManager` or `AgentDialogManager`.",
        "line": 17
      },
      {
        "file": "dialog_manager.py",
        "description": "These magic methods allow you to activate and deactivate intervention mode using the `+` and `-` operators respectively.",
        "line": 31
      },
      {
        "file": "dialog_manager.py",
        "description": "The `message` method is abstract and needs to be implemented by subclasses to handle incoming messages.",
        "line": 57
      },
      {
        "file": "dialog_manager.py",
        "description": "The `BasicDialogManager` is a concrete implementation for managing basic dialogs without agents.",
        "line": 61
      },
      {
        "file": "dialog_manager.py",
        "description": "The `AgentDialogManager` is designed to manage conversations involving multiple agents.",
        "line": 121
      }
    ]
  }